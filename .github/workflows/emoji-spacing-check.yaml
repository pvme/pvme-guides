name: Check Emoji Spacing

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  check-spacing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan files for emoji spacing violations
        id: grep
        shell: bash
        run: |
          echo "🔎 Scanning files for bad emoji spacing…"
          bad=""

          # toggle to true if you want to scan the *entire* branch
          dev_mode="false"
          echo "Dev mode: $dev_mode"

          if [ "$dev_mode" = true ]; then
            mapfile -t files < <(git ls-files)
          else
            # list only the files changed in this PR
            base_sha="${{ github.event.pull_request.base.sha }}"
            head_sha="${{ github.event.pull_request.head.sha }}"
            mapfile -t files < <(git diff --name-only "$base_sha" "$head_sha")
          fi

          for file in "${files[@]}"; do
            echo "📂 Checking: $file"

            # start by grabbing any emoji touching a non-space on one side
            matches=$(grep -nPo "[^[:space:]]<:.*?:[0-9]+>|<:.*?:[0-9]+>[^[:space:]]" "$file" || true)

            [ -z "$matches" ] && echo "✅ No issues in $file" && continue

            file_block=""
            
            while IFS= read -r line; do
              lineno="${line%%:*}"
              match="${line#*:}"
              full_line=$(sed "${lineno}q;d" "$file")
            
              # 1) allowed leading char?
              #    - letter prefixes (r, s, _) only if preceded by BOF or space
              #    - any punctuation prefix (including backslash or backtick) always OK
              if echo "$match" | grep -Pq '^[rs_]<:'; then
                if echo "$full_line" | grep -Pq "(^|[[:space:]])\\Q$match\\E"; then
                  continue
                fi
              elif echo "$match" | grep -Pq '^[^[:alnum:][:space:]]<:'; then
                continue
              fi
            
              # 2) Skip if either:
              #  a real zero-width‐space (U+200B) appears before
              #  OR the two-character sequence "\n" (backslash + 'n') appears before
              if echo "$full_line" | grep -Pq '(?:\\u200B|\\u200b|\\n)(?=<:[^:<>]+:[0-9]+>)'; then
                continue
              fi
            
              # 3) inside backticks? skip
              if echo "$full_line" | grep -Pq '\`[^`]*\Q'"$match"'\E[^`]*\`'; then
                continue
              fi
            
              # 4) allowed trailing char? skip
              if echo "$match" | grep -Pq "^<:.*?:[0-9]+>[.,!?;:\\\\)\]}\_\"'\-\*]?$"; then
                continue
              fi
            
              # 5) 🚫 violation!
              escaped_bt=$(printf '%s' "$match" | sed 's/`/\\`/g')
              file_block+=$'\n'"* Line $lineno: \`${escaped_bt}\`"
            done <<< "$matches"

            if [ -n "$file_block" ]; then
              file_url="https://github.com/${{ github.repository }}/blob/$branch_name/$file"
              bad+=$'\n'"**In [\`$file\`]($file_url):**"$'\n'"$file_block"
            fi
          done

          if [ -n "$bad" ]; then
            {
              echo "## ❌ Style Guide issue: Emoji Spacing"
              echo
              echo "Emojis must have a space before and after them unless surrounded by: \`r\`, \`s\`, \`_\`, punctuation, quotes, brackets, dashes, asterisks, backslashes, or a zero-width space."
              echo
              echo "_Tip: Cmd/Ctrl+Click file links to open them in a new tab._"
              echo
              echo "### __Offending Lines__"
              echo "$bad"
            } > emoji-comment.txt
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Comment on PR if issues found
        if: steps.grep.outputs.found == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: emoji-comment.txt

      - name: Fail the job if issues found
        if: steps.grep.outputs.found == 'true'
        run: exit 1
