name: Check Emoji Spacing

on:
  pull_request:

jobs:
  check-spacing:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }}

      - name: Scan files for emoji spacing violations
        id: grep
        shell: bash
        run: |
          branch_name="${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}"
          echo "Scanning files for bad emoji spacing..."

          bad=""

          ### TOGGLE MODE BELOW ###

          # üîÅ DEV MODE: Scan all files in repo
          # find . -type f \( -name "*.md" -o -name "*.txt" -o -name "*.js" -o -name "*.ts" -o -name "*.py" -o -name "*.html" -o -name "*.rb" -o -name "*.go" -o -name "*.c" -o -name "*.cpp" \) -print0 |

          # ‚úÖ PROD MODE: Scan only changed files in PR (space-safe)
          base_commit=$(git merge-base HEAD origin/${{ github.base_ref }})
          git diff --name-only "$base_commit"...HEAD -z |

          while IFS= read -r -d '' file; do
            clean_file="${file#./}"
            echo "üîç Checking file: $clean_file"

            regex="[^[:space:]]<:.*?:[0-9]+>|<:.*?:[0-9]+>[^[:space:]]"
            export LC_ALL=C.UTF-8
            matches=$(grep -nPo "$regex" "$file" || true)

            echo "MATCHES FOUND:"
            echo "$matches"

            if [ -z "$matches" ]; then
              echo "‚ö†Ô∏è  No matches found in: $file"
              continue
            fi

            file_block=""

            while IFS= read -r line; do
              lineno="${line%%:*}"
              match="${line#*:}"
              [ -z "$match" ] && continue

              echo "üîé Checking match on line $lineno: $match"

              emoji=$(echo "$match" | grep -oP "<:.*?:\d+>")
              [ -z "$emoji" ] && continue
              escaped_emoji=$(printf '%s' "$emoji" | sed -e 's/[][(){}.^$*+?|\\]/\\&/g')

              # Allowed leading characters
              echo "$match" | perl -ne "exit 0 if /[rs_\"'\\(\\[{\-*]$escaped_emoji/; exit 1" && continue

              # Allow leading ZWS
              echo "$match" | perl -ne "exit 0 if /\x{200B}$emoji/; exit 1" && continue

              # Skip if emoji appears inside backticks on the full line
              full_line=$(sed "${lineno}q;d" "$file")
              echo "$full_line" | grep -Pq '\`[^`]*<:.*?:\d+>[^`]*\`' && continue

              # Allowed trailing characters
              echo "$match" | perl -ne "exit 0 if /^$escaped_emoji[.,!?;:\\\\)\\]{}_\"'\\-*]/; exit 1" && continue

              # Add escaped match as a bullet line
              escaped_match=$(printf "%s" "$match" | sed 's/`/\\`/g')
              echo "‚ö†Ô∏è  Adding to file_block: $escaped_match"
              file_block+=$(printf "* Line %s: \`%s\`\n" "$lineno" "$escaped_match")

            done <<< "$matches"

            if [ -n "$file_block" ]; then
              file_url="https://github.com/${{ github.repository }}/blob/$branch_name/$clean_file"
              bad+=$(printf "\n**In [\`%s\`](%s):**\n%s\n" "$clean_file" "$file_url" "$file_block")
            fi
          done
          
          echo "üí° Final bad block content:"
          printf "%s\n" "$bad"
          
          if [[ -n "$bad" ]]; then
            {
              echo "## ‚ùå Style Guide issue: Emoji Spacing"
              echo
              echo "Emojis must have a space before and after them unless surrounded by: \`r\`, \`s\`, \`_\`, punctuation, quotes, brackets, dashes, asterisks, backslashes, or a zero-width space."
              echo
              echo "_Tip: Cmd/Ctrl+Click file links to open them in a new tab._"
              echo
              echo "### __Offending Lines__"
              printf "%s\n" "$bad"
            } > emoji-comment.txt
          
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi


      - name: Comment on PR if issues found
        if: steps.grep.outputs.found == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: emoji-comment.txt

      - name: Fail the job if issues found
        if: steps.grep.outputs.found == 'true'
        run: exit 1
