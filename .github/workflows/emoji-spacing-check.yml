name: Check Emoji Spacing

on:
  pull_request:

jobs:
  check-spacing:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan all files for emoji spacing violations
        id: grep
        shell: bash
        run: |
          echo "Scanning all files for bad emoji spacing..."

          ZWS=$'\u200B'

          suggest_fix() {
            echo "$1" | perl -pe '
              next if /^([rs_]|\\u200B|\x{200B})<:/; # Skip if valid prefix
              s/(?<![rs_\\]|\x{200B})(?<!^)([a-zA-Z0-9\)\]\>\}])(<:.*?:\d+>)/$1 $2/g;
              s/(<:.*?:\d+>)([a-zA-Z0-9\(\[\<\{])/$1 $2/g;
            '
          }

          all_files=$(find . -type f \( -name "*.md" -o -name "*.txt" -o -name "*.js" -o -name "*.ts" -o -name "*.py" -o -name "*.html" -o -name "*.rb" -o -name "*.go" -o -name "*.c" -o -name "*.cpp" \) )

          regex='[^ \t\r\n\x{200B}\\]<:.*?:\d+>|<:.*?:\d+>[^ \t\r\n\x{200B}\\]'
          bad=""

          for file in $all_files; do
            clean_file="${file#./}"
            echo "üîç Checking file: $clean_file"

            if grep -nP "$regex" "$file" > /dev/null; then
              matches=$(grep -nP "$regex" "$file" || true)
              block=""
              while IFS= read -r line; do
                lineno="${line%%:*}"
                content="${line#*:}"
                segments=$(echo "$content" | grep -oP "$regex" || true)

                for match in $segments; do
                  fixed=$(suggest_fix "$match")
                  if [[ "$match" != "$fixed" ]]; then
                    block+="* Line $lineno:\n"
                    block+="  ‚ùå Offending segment: \`$match\`\n"
                    block+="  ‚úÖ Suggestion:        \`$fixed\`\n"
                  fi
                done
              done <<< "$matches"

              if [[ -n "$block" ]]; then
                file_url="https://github.com/${{ github.repository }}/blame/${{ github.head_ref || github.ref_name }}/$clean_file"
                bad+="**In [\`$clean_file\`]($file_url):**\n$block\n"
              fi
            fi
          done

          if [[ -n "$bad" ]]; then
            {
              echo "## ‚ùå Style Guide issue: Emoji Spacing"
              echo
              echo "Emojis must have a space before and after them unless preceded by 'r', 's', '_', '\\u200B', or a zero-width space."
              echo
              echo "### Offending Lines & Suggested Fixes"
              echo "$bad"
            } > emoji-comment.txt
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Comment on PR if issues found
        if: steps.grep.outputs.found == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: emoji-comment.txt

      - name: Fail the job if issues found
        if: steps.grep.outputs.found == 'true'
        run: exit 1
