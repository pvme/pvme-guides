name: Check Emoji Spacing

on:
  pull_request:

jobs:
  check-spacing:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan all files for improperly spaced emojis
        id: grep
        run: |
          echo "Scanning all files for bad emoji spacing..."

          all_files=$(find . -type f \( -name "*.md" -o -name "*.txt" -o -name "*.js" -o -name "*.ts" -o -name "*.py" -o -name "*.html" -o -name "*.rb" -o -name "*.go" -o -name "*.c" -o -name "*.cpp" \))

          bad_lines=""
          count=0
          limit=50

          for file in $all_files; do
            clean_file="${file#./}"
            matches=$(grep -nP '\S<:.*?:.*?>|<:.*?:.*?>\S' "$file" || true)
            while IFS= read -r line; do
              lineno="${line%%:*}"
              content="${line#*:}"
              # Allow punctuation and markdown symbols before/after
              if [[ "$content" =~ [^[:space:][:punct:]]<:.*?:.*?>|<:.*?:.*?>[^[:space:][:punct:]] ]]; then
                if [[ $count -lt $limit ]]; then
                  file_url="https://github.com/${{ github.repository }}/blame/${{ github.head_ref || github.ref_name }}/$clean_file"
                  bad_lines+="**In [\`$clean_file\`]($file_url):**\n* Line $lineno: \`$content\`\n"
                  count=$((count + 1))
                fi
              fi
            done <<< "$matches"
          done

          if [[ -n "$bad_lines" ]]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
            echo "$bad_lines" > comment-body.txt
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Comment on PR if issues found
        if: steps.grep.outputs.found == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## ‚ùå Style Guide issue: Emoji Spacing

            Emojis like `<:emoji:123>` must have a space before and after them.

            ### __Offending Lines (first 50)__
            ${{ steps.grep.outputs.result }}

      - name: Fail the job if issues found
        if: steps.grep.outputs.found == 'true'
        run: exit 1
