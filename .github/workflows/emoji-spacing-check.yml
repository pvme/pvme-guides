name: Check Emoji Spacing

on:
  pull_request:

jobs:
  check-spacing:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan all files for improperly spaced emojis
        id: grep
        run: |
          echo "Scanning all files for bad emoji spacing..."

          all_files=$(find . -type f \( -name "*.md" -o -name "*.txt" -o -name "*.js" -o -name "*.ts" -o -name "*.py" -o -name "*.html" -o -name "*.rb" -o -name "*.go" -o -name "*.c" -o -name "*.cpp" \))

          regex='(?<![\s\p{P}])<:.*?:.*?>(?![\s\p{P}])'
          chunk_size=50
          chunk_num=0
          line_count=0
          chunk_file_prefix="comment-chunk-"
          mkdir chunks

          for file in $all_files; do
            clean_file="${file#./}"
            if grep -nP "$regex" "$file" > /dev/null; then
              matches=$(grep -nP "$regex" "$file" || true)
              file_url="https://github.com/${{ github.repository }}/blame/${{ github.head_ref || github.ref_name }}/$clean_file"
              header="**In [\`$clean_file\`]($file_url):**"$'\n'
              for line in $matches; do
                lineno="${line%%:*}"
                content="${line#*:}"
                printf '* Line %s: `%s`\n' "$lineno" "$content" >> "chunks/$chunk_file_prefix$chunk_num.txt"
                line_count=$((line_count + 1))
                if [[ $line_count -ge $chunk_size ]]; then
                  chunk_num=$((chunk_num + 1))
                  line_count=0
                fi
              done
              sed -i "1i$header" "chunks/$chunk_file_prefix$chunk_num.txt"
              echo >> "chunks/$chunk_file_prefix$chunk_num.txt"
            fi
          done

          echo "chunk_count=$((chunk_num + 1))" >> "$GITHUB_OUTPUT"

      - name: Post chunked comments
        if: steps.grep.outputs.chunk_count != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const chunkDir = 'chunks';
            const files = fs.readdirSync(chunkDir).filter(f => f.endsWith('.txt'));
            for (const f of files) {
              const body = fs.readFileSync(path.join(chunkDir, f), 'utf8');
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## ‚ùå Style Guide issue: Emoji Spacing\n\nEmojis like \`<:emoji:123>\` must have a space before and after them.\n\n${body}`
              });
            }

      - name: Fail the job if issues found
        if: steps.grep.outputs.chunk_count != '0'
        run: exit 1
